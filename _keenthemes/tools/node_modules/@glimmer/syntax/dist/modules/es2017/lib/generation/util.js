const ATTR_VALUE_REGEX_TEST = /[\xA0"&]/;
const ATTR_VALUE_REGEX_REPLACE = new RegExp(ATTR_VALUE_REGEX_TEST.source, 'g');
const TEXT_REGEX_TEST = /[\xA0&<>]/;
const TEXT_REGEX_REPLACE = new RegExp(TEXT_REGEX_TEST.source, 'g');

function attrValueReplacer(char) {
  switch (char.charCodeAt(0)) {
    case 160
    /* NBSP */
    :
      return '&nbsp;';

    case 34
    /* QUOT */
    :
      return '&quot;';

    case 38
    /* AMP */
    :
      return '&amp;';

    default:
      return char;
  }
}

function textReplacer(char) {
  switch (char.charCodeAt(0)) {
    case 160
    /* NBSP */
    :
      return '&nbsp;';

    case 38
    /* AMP */
    :
      return '&amp;';

    case 60
    /* LT */
    :
      return '&lt;';

    case 62
    /* GT */
    :
      return '&gt;';

    default:
      return char;
  }
}

export function escapeAttrValue(attrValue) {
  if (ATTR_VALUE_REGEX_TEST.test(attrValue)) {
    return attrValue.replace(ATTR_VALUE_REGEX_REPLACE, attrValueReplacer);
  }

  return attrValue;
}
export function escapeText(text) {
  if (TEXT_REGEX_TEST.test(text)) {
    return text.replace(TEXT_REGEX_REPLACE, textReplacer);
  }

  return text;
}
export function isSynthetic(node) {
  if (node && node.loc) {
    return node.loc.source === '(synthetic)';
  }

  return false;
}
export function sortByLoc(a, b) {
  // be conservative about the location where a new node is inserted
  if (isSynthetic(a) || isSynthetic(b)) {
    return 0;
  }

  if (a.loc.start.line < b.loc.start.line) {
    return -1;
  }

  if (a.loc.start.line === b.loc.start.line && a.loc.start.column < b.loc.start.column) {
    return -1;
  }

  if (a.loc.start.line === b.loc.start.line && a.loc.start.column === b.loc.start.column) {
    return 0;
  }

  return 1;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3N5bnRheC9saWIvZ2VuZXJhdGlvbi91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBLE1BQU0scUJBQXFCLEdBQUcsVUFBOUI7QUFDQSxNQUFNLHdCQUF3QixHQUFHLElBQUksTUFBSixDQUFXLHFCQUFxQixDQUFDLE1BQWpDLEVBQXlDLEdBQXpDLENBQWpDO0FBRUEsTUFBTSxlQUFlLEdBQUcsV0FBeEI7QUFDQSxNQUFNLGtCQUFrQixHQUFHLElBQUksTUFBSixDQUFXLGVBQWUsQ0FBQyxNQUEzQixFQUFtQyxHQUFuQyxDQUEzQjs7QUFFQSxTQUFTLGlCQUFULENBQTJCLElBQTNCLEVBQXVDO0FBQ3JDLFVBQVEsSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBUjtBQUNFLFNBQUE7QUFBQTtBQUFBO0FBQ0UsYUFBTyxRQUFQOztBQUNGLFNBQUE7QUFBQTtBQUFBO0FBQ0UsYUFBTyxRQUFQOztBQUNGLFNBQUE7QUFBQTtBQUFBO0FBQ0UsYUFBTyxPQUFQOztBQUNGO0FBQ0UsYUFBTyxJQUFQO0FBUko7QUFVRDs7QUFFRCxTQUFTLFlBQVQsQ0FBc0IsSUFBdEIsRUFBa0M7QUFDaEMsVUFBUSxJQUFJLENBQUMsVUFBTCxDQUFnQixDQUFoQixDQUFSO0FBQ0UsU0FBQTtBQUFBO0FBQUE7QUFDRSxhQUFPLFFBQVA7O0FBQ0YsU0FBQTtBQUFBO0FBQUE7QUFDRSxhQUFPLE9BQVA7O0FBQ0YsU0FBQTtBQUFBO0FBQUE7QUFDRSxhQUFPLE1BQVA7O0FBQ0YsU0FBQTtBQUFBO0FBQUE7QUFDRSxhQUFPLE1BQVA7O0FBQ0Y7QUFDRSxhQUFPLElBQVA7QUFWSjtBQVlEOztBQUVELE9BQU0sU0FBVSxlQUFWLENBQTBCLFNBQTFCLEVBQTJDO0FBQy9DLE1BQUkscUJBQXFCLENBQUMsSUFBdEIsQ0FBMkIsU0FBM0IsQ0FBSixFQUEyQztBQUN6QyxXQUFPLFNBQVMsQ0FBQyxPQUFWLENBQWtCLHdCQUFsQixFQUE0QyxpQkFBNUMsQ0FBUDtBQUNEOztBQUNELFNBQU8sU0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLFVBQVYsQ0FBcUIsSUFBckIsRUFBaUM7QUFDckMsTUFBSSxlQUFlLENBQUMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBSixFQUFnQztBQUM5QixXQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsa0JBQWIsRUFBaUMsWUFBakMsQ0FBUDtBQUNEOztBQUNELFNBQU8sSUFBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLFdBQVYsQ0FBc0IsSUFBdEIsRUFBb0M7QUFDeEMsTUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEdBQWpCLEVBQXNCO0FBQ3BCLFdBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxNQUFULEtBQW9CLGFBQTNCO0FBQ0Q7O0FBRUQsU0FBTyxLQUFQO0FBQ0Q7QUFFRCxPQUFNLFNBQVUsU0FBVixDQUFvQixDQUFwQixFQUFpQyxDQUFqQyxFQUE0QztBQUNoRDtBQUNBLE1BQUksV0FBVyxDQUFDLENBQUQsQ0FBWCxJQUFrQixXQUFXLENBQUMsQ0FBRCxDQUFqQyxFQUFzQztBQUNwQyxXQUFPLENBQVA7QUFDRDs7QUFFRCxNQUFJLENBQUMsQ0FBQyxHQUFGLENBQU0sS0FBTixDQUFZLElBQVosR0FBbUIsQ0FBQyxDQUFDLEdBQUYsQ0FBTSxLQUFOLENBQVksSUFBbkMsRUFBeUM7QUFDdkMsV0FBTyxDQUFDLENBQVI7QUFDRDs7QUFFRCxNQUFJLENBQUMsQ0FBQyxHQUFGLENBQU0sS0FBTixDQUFZLElBQVosS0FBcUIsQ0FBQyxDQUFDLEdBQUYsQ0FBTSxLQUFOLENBQVksSUFBakMsSUFBeUMsQ0FBQyxDQUFDLEdBQUYsQ0FBTSxLQUFOLENBQVksTUFBWixHQUFxQixDQUFDLENBQUMsR0FBRixDQUFNLEtBQU4sQ0FBWSxNQUE5RSxFQUFzRjtBQUNwRixXQUFPLENBQUMsQ0FBUjtBQUNEOztBQUVELE1BQUksQ0FBQyxDQUFDLEdBQUYsQ0FBTSxLQUFOLENBQVksSUFBWixLQUFxQixDQUFDLENBQUMsR0FBRixDQUFNLEtBQU4sQ0FBWSxJQUFqQyxJQUF5QyxDQUFDLENBQUMsR0FBRixDQUFNLEtBQU4sQ0FBWSxNQUFaLEtBQXVCLENBQUMsQ0FBQyxHQUFGLENBQU0sS0FBTixDQUFZLE1BQWhGLEVBQXdGO0FBQ3RGLFdBQU8sQ0FBUDtBQUNEOztBQUVELFNBQU8sQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQVNUIGZyb20gJy4uL3R5cGVzL25vZGVzJztcblxuY29uc3QgZW51bSBDaGFyIHtcbiAgTkJTUCA9IDB4YTAsXG4gIFFVT1QgPSAweDIyLFxuICBMVCA9IDB4M2MsXG4gIEdUID0gMHgzZSxcbiAgQU1QID0gMHgyNixcbn1cblxuY29uc3QgQVRUUl9WQUxVRV9SRUdFWF9URVNUID0gL1tcXHhBMFwiJl0vO1xuY29uc3QgQVRUUl9WQUxVRV9SRUdFWF9SRVBMQUNFID0gbmV3IFJlZ0V4cChBVFRSX1ZBTFVFX1JFR0VYX1RFU1Quc291cmNlLCAnZycpO1xuXG5jb25zdCBURVhUX1JFR0VYX1RFU1QgPSAvW1xceEEwJjw+XS87XG5jb25zdCBURVhUX1JFR0VYX1JFUExBQ0UgPSBuZXcgUmVnRXhwKFRFWFRfUkVHRVhfVEVTVC5zb3VyY2UsICdnJyk7XG5cbmZ1bmN0aW9uIGF0dHJWYWx1ZVJlcGxhY2VyKGNoYXI6IHN0cmluZykge1xuICBzd2l0Y2ggKGNoYXIuY2hhckNvZGVBdCgwKSkge1xuICAgIGNhc2UgQ2hhci5OQlNQOlxuICAgICAgcmV0dXJuICcmbmJzcDsnO1xuICAgIGNhc2UgQ2hhci5RVU9UOlxuICAgICAgcmV0dXJuICcmcXVvdDsnO1xuICAgIGNhc2UgQ2hhci5BTVA6XG4gICAgICByZXR1cm4gJyZhbXA7JztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNoYXI7XG4gIH1cbn1cblxuZnVuY3Rpb24gdGV4dFJlcGxhY2VyKGNoYXI6IHN0cmluZykge1xuICBzd2l0Y2ggKGNoYXIuY2hhckNvZGVBdCgwKSkge1xuICAgIGNhc2UgQ2hhci5OQlNQOlxuICAgICAgcmV0dXJuICcmbmJzcDsnO1xuICAgIGNhc2UgQ2hhci5BTVA6XG4gICAgICByZXR1cm4gJyZhbXA7JztcbiAgICBjYXNlIENoYXIuTFQ6XG4gICAgICByZXR1cm4gJyZsdDsnO1xuICAgIGNhc2UgQ2hhci5HVDpcbiAgICAgIHJldHVybiAnJmd0Oyc7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBjaGFyO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGVBdHRyVmFsdWUoYXR0clZhbHVlOiBzdHJpbmcpIHtcbiAgaWYgKEFUVFJfVkFMVUVfUkVHRVhfVEVTVC50ZXN0KGF0dHJWYWx1ZSkpIHtcbiAgICByZXR1cm4gYXR0clZhbHVlLnJlcGxhY2UoQVRUUl9WQUxVRV9SRUdFWF9SRVBMQUNFLCBhdHRyVmFsdWVSZXBsYWNlcik7XG4gIH1cbiAgcmV0dXJuIGF0dHJWYWx1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZVRleHQodGV4dDogc3RyaW5nKSB7XG4gIGlmIChURVhUX1JFR0VYX1RFU1QudGVzdCh0ZXh0KSkge1xuICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoVEVYVF9SRUdFWF9SRVBMQUNFLCB0ZXh0UmVwbGFjZXIpO1xuICB9XG4gIHJldHVybiB0ZXh0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTeW50aGV0aWMobm9kZTogQVNULk5vZGUpOiBib29sZWFuIHtcbiAgaWYgKG5vZGUgJiYgbm9kZS5sb2MpIHtcbiAgICByZXR1cm4gbm9kZS5sb2Muc291cmNlID09PSAnKHN5bnRoZXRpYyknO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc29ydEJ5TG9jKGE6IEFTVC5Ob2RlLCBiOiBBU1QuTm9kZSk6IC0xIHwgMCB8IDEge1xuICAvLyBiZSBjb25zZXJ2YXRpdmUgYWJvdXQgdGhlIGxvY2F0aW9uIHdoZXJlIGEgbmV3IG5vZGUgaXMgaW5zZXJ0ZWRcbiAgaWYgKGlzU3ludGhldGljKGEpIHx8IGlzU3ludGhldGljKGIpKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBpZiAoYS5sb2Muc3RhcnQubGluZSA8IGIubG9jLnN0YXJ0LmxpbmUpIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICBpZiAoYS5sb2Muc3RhcnQubGluZSA9PT0gYi5sb2Muc3RhcnQubGluZSAmJiBhLmxvYy5zdGFydC5jb2x1bW4gPCBiLmxvYy5zdGFydC5jb2x1bW4pIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICBpZiAoYS5sb2Muc3RhcnQubGluZSA9PT0gYi5sb2Muc3RhcnQubGluZSAmJiBhLmxvYy5zdGFydC5jb2x1bW4gPT09IGIubG9jLnN0YXJ0LmNvbHVtbikge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgcmV0dXJuIDE7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9